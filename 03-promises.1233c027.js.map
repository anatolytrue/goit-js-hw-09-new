{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAI,CAACH,WAAUC,UAEfG,EAAI,CAACJ,WAAUC,S,GAEhBA,E,IA3BMQ,SAASC,cAAc,SAM/BC,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAEC,iBACF,IAAMC,EAASF,EAAEG,OAAOD,OAAOE,MACzBC,EAAOL,EAAEG,OAAOE,KAAKD,MACrBf,EAAQW,EAAEG,OAAOd,MAAMe,MAC7BE,QAAQC,IAAIL,EAAQG,EAAMhB,GAkB5B,SAAyBa,EAAQG,EAAMhB,GACrC,IAAK,IAAImB,EAAI,EAAGA,GAAKN,EAAQM,GAAK,EAAE,CAElCrB,EAAcqB,EADFnB,EAAQgB,GAAQG,EAAI,IAE7BC,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUuB,EAAKD,EAALrB,MACjBJ,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANH,EAAM,M,IAG9DI,OAAM,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAUuB,EAAKD,EAALrB,MAClBJ,EAAA2B,OAAOI,QAAQ,sBAAuCF,OAAf1B,EAAS,QAAY0B,OAANH,EAAM,M,KAzBlEM,CAAgBf,EAAQG,EAAMhB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\"\n\n\nconst form = document.querySelector('.form')\n// const firstDelay = document.querySelector('.delay')\n// const delayStep = document.querySelector('.step')\n// const amountPromises = document.querySelector('.amount')\n// const submitBtn = document.querySelector('.submit')\n\nform.addEventListener('submit', onClickCreate)\n\nfunction onClickCreate(e) {\n  e.preventDefault()\n  const amount = e.target.amount.value\n  const step = e.target.step.value\n  const delay = e.target.delay.value\n  console.log(amount, step, delay)\n\n  promisesCounter(amount, step, delay) \n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({position, delay})\n      } else {\n        rej({position, delay})\n      }\n    }, delay)\n  })\n}\n\nfunction promisesCounter(amount, step, delay) {\n  for (let i = 1; i <= amount; i += 1){\n    let total = delay + step * (i - 1)\n    createPromise(i, total)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n  }\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","amount","target","value","step","console","log","i","then","param","_$delay","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$promisesCounter"],"version":3,"file":"03-promises.1233c027.js.map"}